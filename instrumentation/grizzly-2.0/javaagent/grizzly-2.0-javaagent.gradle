apply from: "$rootDir/gradle/instrumentation.gradle"

muzzle {
  pass {
    group = "org.glassfish.grizzly"
    module = 'grizzly-http'
    versions = "[2.0,)"
    assertInverse = true
  }
}

dependencies {
  compileOnly group: 'org.glassfish.grizzly', name: 'grizzly-http', version: '2.0'

  testImplementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.3'
  testImplementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
  testLibrary group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: '2.0'

  latestDepTestLibrary group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: '2.+'
  latestDepTestLibrary group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.+'
}

tasks.withType(Test) {
  jvmArgs "-Dotel.instrumentation.grizzly.enabled=true"
  // NB(anuraaga): Unlike other similar exclusions this one does not seem to fail 100% of the time.
  // Stack trace that has been encountered is.
  //
  // java.lang.AssertionError: Thread [Grizzly-worker(2)] opened a scope of {opentelemetry-trace-span-key=RecordEventsReadableSpan{traceId=96b4747304733565aa64b063572bd8b0, spanId=5283bd8e13b286b2, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, name=HttpCodecFilter.handleRead, kind=SERVER, attributes=AttributesMap{data={http.url=http://localhost:11004/query?some=query, http.status_code=200, http.method=GET, net.peer.ip=127.0.0.1, thread.name=Grizzly-kernel(1) SelectorRunner, http.client_ip=1.1.1.1, net.peer.port=50786, thread.id=47, http.user_agent=test-user-agent, http.flavor=1.1}, capacity=128, totalAddedValues=10}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1616737327045001600, endEpochNanos=1616737327047716720}, opentelemetry-traces-server-span-key=RecordEventsReadableSpan{traceId=96b4747304733565aa64b063572bd8b0, spanId=5283bd8e13b286b2, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, name=HttpCodecFilter.handleRead, kind=SERVER, attributes=AttributesMap{data={http.url=http://localhost:11004/query?some=query, http.status_code=200, http.method=GET, net.peer.ip=127.0.0.1, thread.name=Grizzly-kernel(1) SelectorRunner, http.client_ip=1.1.1.1, net.peer.port=50786, thread.id=47, http.user_agent=test-user-agent, http.flavor=1.1}, capacity=128, totalAddedValues=10}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1616737327045001600, endEpochNanos=1616737327047716720}, thread-propagation-locations=[[Ljava.lang.StackTraceElement;@62b8a750, [Ljava.lang.StackTraceElement;@47209e45, [Ljava.lang.StackTraceElement;@210b05e3, [Ljava.lang.StackTraceElement;@2259d08f, [Ljava.lang.StackTraceElement;@61f7896b]} here:
  //        at io.opentelemetry.javaagent.instrumentation.api.concurrent.AdviceUtils.startTaskScope(AdviceUtils.java:28)
  //        at org.glassfish.grizzly.http.server.HttpHandler$1.run(HttpHandler.java:201)
  jvmArgs "-Dio.opentelemetry.javaagent.shaded.io.opentelemetry.context.enableStrictContext=false"
}
